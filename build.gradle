apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: 'cloudfoundry'

sourceCompatibility = 1.7
version = '0.1'

jar {
    manifest {
        attributes 'Implementation-Title': 'Spring Service Broker for CloudFoundry', 'Implementation-Version': version
    }
}

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'org.cloudfoundry', name: 'cf-gradle-plugin', version: '1.0.1'
    }
       
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    // compile ("org.springframework:spring-context:${springVersion}") {
    //  exclude group:"commons-logging", module:"commons-logging"
    // }
    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework:spring-web:${springVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"  
    compile "commons-lang:commons-lang:2.5"
    compile "commons-collections:commons-collections:3.2.1"
    compile "commons-beanutils:commons-beanutils:1.9.2"        
    compile "net.sf.json-lib:json-lib:2.4:jdk15"
    compile "log4j:log4j:1.2.17"
    compile "postgresql:postgresql:9.0-801.jdbc3"
    compile "org.codehaus.jackson:jackson-mapper-asl:${jacksonVersion}"
             
    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    runtime "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
    runtime "org.slf4j:slf4j-log4j12:${slf4jVersion}"       
    runtime ("log4j:log4j:${log4jVersion}") {
      exclude group:"javax.mail", module:"mail"
      exclude group:"javax.jms", module:"jms"
      exclude group:"com.sun.jdmk", module:"jmxtools"
      exclude group:"com.sun.jmx", module:"jmxri"
    }
    
    compile "javax.servlet:servlet-api:${servletApiVersion}"
    compile "javax.servlet.jsp:jsp-api:${jspApiVersion}"
    compile "javax.servlet:jstl:${jstlVersion}"

    compile "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
  	compile "mysql:mysql-connector-java:${mysqlDriverVersion}"
  	
    compile "net.sf.ezmorph:ezmorph:1.0.6"
  
    testCompile "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "com.jayway.jsonpath:json-path:${jsonpathVersion}"    

}

task wrapper(type: Wrapper) {
    gradleVersion = '1.10'
}

test {
    afterTest { desc, result ->
        println "Executing test ${desc.name} [${desc.className}] with result: ${result.resultType}"
    }
}

war {
    // omit the version from the war file name
    version = ""
}
